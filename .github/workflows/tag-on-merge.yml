name: tag-on-merge

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  tag:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch all tags
        run: git fetch --tags

      - name: Bump version and create tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: true
          RELEASE_BRANCHES: main
          DRY_RUN: false
          INITIAL_VERSION: 0.1.0
          TAG_CONTEXT: repo
          CONVENTIONAL_COMMITS: true

      - name: Comment on PR with new tag
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const newTag = process.env.NEW_TAG || '${{ steps.tag_version.outputs.new_tag }}';
            if (prNumber && newTag) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `:tada: This PR has been released as **${newTag}**`
              });
            }
        env:
          NEW_TAG: ${{ steps.tag_version.outputs.new_tag }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR with new release
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const newTag = process.env.NEW_TAG || '${{ steps.tag_version.outputs.new_tag }}';
            const url = process.env.RELEASE_URL || '#';
            if (prNumber && newTag) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `:tada: New github release [${newTag}](${url})`
              });
            }
        env:
          NEW_TAG: ${{ steps.tag_version.outputs.new_tag }}
          RELEASE_URL: ${{ github.repository }}/releases/tag/${{ steps.tag_version.outputs.new_tag }}
